x-airflow-common:
  &airflow-common
  build:
    context: ../
    dockerfile: docker/airflow/airflow.dockerfile
  user: "0:0"  # run as root to access docker.sock
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__WEBSERVER__SECRET_KEY: "super-secret-key-please-change-me"  # use the same in all services!
    AIRFLOW__CORE__FERNET_KEY: "X5uLmpuVDfYEm1LXYGxR8UwHAPEVIXKo5A98O4yU8lY="  # optional but good to define
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW_CONN_SSH_SPARK_CLIENT: ssh://sparkuser:spark@client:22
    AIRFLOW_CONN_SSH_SPARK_MASTER: ssh://sparkuser:spark@master:22
    AIRFLOW_CONN_SSH_KAFKA: ssh://kafka_user:kafka@kafka1:22
    AIRFLOW_CONN_SSH_CONFLUENT_KAFKA: ssh://confluent_kafka_user:kafka@confluent_kafka:22

  networks:
    - reddit_network


  volumes:
    - ../config/airflow/config:/opt/airflow/config
    - ../config/airflow/dags:/opt/airflow/dags
    - ../config/airflow/logs:/opt/airflow/logs
    - ../config/airflow/plugins:/opt/airflow/plugins
  depends_on:
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    networks:
      - reddit_network

  airflow-init:
    <<: *airflow-common
    command: >
      bash -c "
        airflow db upgrade &&
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com
      "

  airflow-webserver:
    <<: *airflow-common
    ports:
      - 8089:8080
    command: webserver
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    depends_on:
      airflow-init:
        condition: service_completed_successfully

volumes:
  postgres-db-volume:

networks:
  reddit_network:
    driver: bridge
    name: reddit_network
    external: true 
